name: CI

on: [push, pull_request]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php: [8.1, 8.2, 8.3]
                db: ['mysql:8.0.36', 'mariadb:10.6', 'percona:5.7']
                vars: ['-p 33060:3306 -e MYSQL_PASSWORD=github -e MYSQL_DATABASE=doctrine_extensions_tests -e MYSQL_USER=github -e MYSQL_ALLOW_EMPTY_PASSWORD=yes']
                include:
                    - db: 'mysql:8.0.36'
                      env: 'DB=mysql'
                      vars: ['-p 33060:3306 -e MYSQL_PASSWORD=github -e MYSQL_DATABASE=doctrine_extensions_tests -e MYSQL_USER=github -e MYSQL_ALLOW_EMPTY_PASSWORD=yes']
                    - db: 'mariadb:10.6'
                      env: 'DB=mysql'
                      vars: ['-p 33060:3306 -e MYSQL_PASSWORD=github -e MYSQL_DATABASE=doctrine_extensions_tests -e MYSQL_USER=github -e MYSQL_ALLOW_EMPTY_PASSWORD=yes']
                    - db: 'percona:5.7'
                      env: 'DB=mysql'
                      vars: ['-p 33060:3306 -e MYSQL_PASSWORD=github -e MYSQL_DATABASE=doctrine_extensions_tests -e MYSQL_USER=github -e MYSQL_ALLOW_EMPTY_PASSWORD=yes']
                    - db: 'postgres:12.18'
                      env: 'DB=pgsql'
                      vars: ['-p 54320:5432 -e POSTGRES_DB=doctrine_extensions_tests -e POSTGRES_USER=github -e POSTGRES_PASSWORD=github']
                    - db: 'postgres:13.14'
                      env: 'DB=pgsql'
                      vars: [ '-p 54320:5432 -e POSTGRES_DB=doctrine_extensions_tests -e POSTGRES_USER=github -e POSTGRES_PASSWORD=github' ]
                    - db: 'postgres:14.11'
                      env: 'DB=pgsql'
                      vars: [ '-p 54320:5432 -e POSTGRES_DB=doctrine_extensions_tests -e POSTGRES_USER=github -e POSTGRES_PASSWORD=github' ]
                    - db: 'postgres:15.6'
                      env: 'DB=pgsql'
                      vars: [ '-p 54320:5432 -e POSTGRES_DB=doctrine_extensions_tests -e POSTGRES_USER=github -e POSTGRES_PASSWORD=github' ]

        services:
            database:
                image: ${{ matrix.db }}
                options: ${{ matrix.vars }}

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Install dependencies
              run: composer install --prefer-dist --no-interaction --no-suggest

            - name: Run PHPUnit
              run: vendor/bin/phpunit --configuration tests/config/$DB.phpunit.xml --testsuite="Oro Doctrine Extensions Test Suite"

            - name: Run PHPCS
              run: vendor/bin/phpcs src/ tests/ -p --encoding=utf-8 --extensions=php --standard=psr2

            - name: Run Tear Down Tests
              run: vendor/bin/phpunit --configuration tests/config/$DB.phpunit.xml tests/Oro/Tests/Connection/TearDownTest.php
